unit UMenu;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Data.Win.ADODB, Vcl.StdCtrls,
  Vcl.ExtCtrls, Vcl.Imaging.pngimage, IniFiles, Clipbrd;

type
  TfrmMenu = class(TForm)
    conexao: TADOConnection;
    ADOQuery1: TADOQuery;
    lblIdUsr: TLabel;
    btnGerGrupos: TButton;
    btnGerCrianca: TButton;
    Label4: TLabel;
    Label3: TLabel;
    btnRelatorios: TButton;
    edtGeraRelatorios: TButton;
    btnConfig: TButton;
    Image1: TImage;
    lblVersao: TLabel;
    procedure btnGerGruposClick(Sender: TObject);
    procedure btnGerCriancaClick(Sender: TObject);
    procedure btnRelatoriosClick(Sender: TObject);
    procedure edtGeraRelatoriosClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure btnConfigClick(Sender: TObject);
    procedure conectarAoBanco;
    procedure preencherVarBanco;
    function pegaSQL(qry: TADOQuery):string;
  private
    { Private declarations }
  public
    idUsuario:string;
    nnVersao:string;
    var user: string;
    var senha: string;
    var banco: string;
    var servidor:string;
    var NomeEstacao:string;
  end;

var
  frmMenu: TfrmMenu;

implementation

{$R *.dfm}

uses ULogin, UGrupos, UCriancas, UCadCrianca, UGerRelatorios,
  UImprimirRelatorio, UEntrarConfig, uConfigCon;

procedure TfrmMenu.btnConfigClick(Sender: TObject);
    begin
        frmEntrarConfig:=TfrmEntrarConfig.create(self);
        frmEntrarConfig.ShowModal;
    end;

procedure TfrmMenu.btnGerCriancaClick(Sender: TObject);
    begin
       frmGerCriancas:= TfrmGerCriancas.Create(self);
       frmGerCriancas.ShowModal;

    end;

procedure TfrmMenu.btnGerGruposClick(Sender: TObject);
    begin
        frmGerGrupos:= TfrmGerGrupos.Create(self);
        frmGerGrupos.ShowModal;
    end;

procedure TfrmMenu.btnRelatoriosClick(Sender: TObject);
    begin
        frmGerRelatorios:=TfrmGerRelatorios.Create(self);
        frmGerRelatorios.ShowModal;
    end;

procedure TfrmMenu.conectarAoBanco;
 var con : string;
begin
  preencherVarBanco;

  con := 'Provider=SQLOLEDB.1;';
  con := con +'Integrated Security=SSPI;';
  con := con + 'Persist Security Info=False;';
  con := con + 'Initial Catalog='+banco+';';
  con := con + 'Data Source='+servidor+';';

  try
    conexao.Close;
    conexao.ConnectionString:=con;
    conexao.ConnectOptions:= coAsyncConnect;
    conexao.Connected := true;
  except
    on e: Exception do
      begin
          ShowMessage('erro na conexão com o banco de dados');
          frmConfuguraCon:=TfrmConfuguraCon.Create(self);
          frmConfuguraCon.Show;
      end;
  end;
end;

procedure TfrmMenu.edtGeraRelatoriosClick(Sender: TObject);
    begin
        frmGerarRelatorio:=TfrmGerarRelatorio.Create(self);
        frmGerarRelatorio.ShowModal;
    end;

procedure TfrmMenu.FormClose(Sender: TObject; var Action: TCloseAction);
begin
    Action := caFree;
end;

function TfrmMenu.pegaSQL(qry: TADOQuery): string;
begin
   Clipboard.AsText := qry.SQL.GetText;
   Result :='Copiado para área de tranferência';
end;

procedure TfrmMenu.preencherVarBanco;
var
  ArqIni: TIniFile;
begin
  ArqIni := TIniFile.Create('C:\CriancaFeliz\configPCF.ini');
  try
    user := ArqIni.ReadString('Configuracoes', 'user', '');
    senha:= ArqIni.ReadString('Configuracoes', 'senha', '');
    banco:= ArqIni.ReadString('Configuracoes', 'banco', '');
    servidor:= ArqIni.ReadString('Configuracoes', 'servidor', '');
    NomeEstacao:= ArqIni.ReadString('Configuracoes', 'NomeEstacao', '');
  finally
    ArqIni.Free;
  end;
end;


end.
